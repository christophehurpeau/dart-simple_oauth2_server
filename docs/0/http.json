{"kind":"library","name":"package:http/http.dart","id":"http","comment":"A composable, [Future]-based library for making HTTP requests.\n\n## Installing ##\n\nUse [pub][] to install this package. Add the following to your\n`pubspec.yaml` file.\n\n    dependencies:\n      http: any\n\nThen run `pub install`.\n\nFor more information, see the\n[http package on pub.dartlang.org](http://pub.dartlang.org/packages/http).\n\nThe easiest way to use this library is via the top-level functions. They\nallow you to make individual HTTP requests with minimal hassle:\n\n    import 'package:http/http.dart' as http;\n\n    var url = \"http://example.com/whatsit/create\";\n    http.post(url, body: {\"name\": \"doodle\", \"color\": \"blue\"})\n        .then((response) {\n      print(\"Response status: ${response.statusCode}\");\n      print(\"Response body: ${response.body}\");\n    });\n\n    http.read(\"http://example.com/foobar.txt\").then(print);\n\nIf you're making multiple requests to the same server, you can keep open a\npersistent connection by using a [Client] rather than making one-off\nrequests. If you do this, make sure to close the client when you're done:\n\n    var client = new http.Client();\n    client.post(\n        \"http://example.com/whatsit/create\",\n        body: {\"name\": \"doodle\", \"color\": \"blue\"})\n      .then((response) => client.get(response.bodyFields['uri']))\n      .then((response) => print(response.body))\n      .whenComplete(client.close);\n\nYou can also exert more fine-grained control over your requests and\nresponses by creating [Request] or [StreamedRequest] objects yourself and\npassing them to [Client.send].\n\nThis package is designed to be composable. This makes it easy for external\nlibraries to work with one another to add behavior to it. Libraries wishing\nto add behavior should create a subclass of [BaseClient] that wraps another\n[Client] and adds the desired behavior:\n\n    class UserAgentClient extends http.BaseClient {\n      final String userAgent;\n      final http.Client _inner;\n\n      UserAgentClient(this.userAgent, this._inner);\n\n      Future<StreamedResponse> send(BaseRequest request) {\n        request.headers[HttpHeaders.USER_AGENT] = userAgent;\n        return _inner.send(request);\n      }\n    }\n\n[pub]: http://pub.dartlang.org","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"_withClient","id":"_withClient1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"fn","id":"fn","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"Client","id":"Client","uri":"package:http/http.dart","line":"202"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"202"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Uint8List","refId":"dart.typed_data/Uint8List"}]},"kind":"method","name":"readBytes","id":"readBytes2()","comment":"Sends an HTTP GET request with the given headers to the given URL, which can\nbe a [Uri] or a [String], and returns a Future that completes to the body of\nthe response as a list of bytes.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request and response, use [Request]\ninstead.","children":[{"kind":"param","name":"url","id":"url"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"headers","id":"headers"}],"line":"199"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"read","id":"read2()","comment":"Sends an HTTP GET request with the given headers to the given URL, which can\nbe a [Uri] or a [String], and returns a Future that completes to the body of\nthe response as a [String].\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request and response, use [Request]\ninstead.","children":[{"kind":"param","name":"url","id":"url"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"headers","id":"headers"}],"line":"183"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Response","refId":"response/Response"}]},"kind":"method","name":"delete","id":"delete2()","comment":"Sends an HTTP DELETE request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request, use [Request] instead.","children":[{"kind":"param","name":"url","id":"url"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"headers","id":"headers"}],"line":"167"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Response","refId":"response/Response"}]},"kind":"method","name":"put","id":"put4()","comment":"Sends an HTTP PUT request with the given headers and body to the given URL,\nwhich can be a [Uri] or a [String].\n\n[body] sets the body of the request. It can be a [String], a [List<int>] or\na [Map<String, String>]. If it's a String, it's encoded using [encoding] and\nused as the body of the request. The content-type of the request will\ndefault to \"text/plain\".\n\nIf [body] is a List, it's used as a list of bytes for the body of the\nrequest.\n\nIf [body] is a Map, it's encoded as form fields using [encoding]. The\ncontent-type of the request will be set to\n`\"application/x-www-form-urlencoded\"`; this cannot be overridden.\n\n[encoding] defaults to [UTF8].\n\nFor more fine-grained control over the request, use [Request] or\n[StreamedRequest] instead.","children":[{"kind":"param","name":"url","id":"url"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"headers","id":"headers"},{"isOptional":true,"isNamed":true,"kind":"param","name":"body","id":"body"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"155"}],"line":"154"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Response","refId":"response/Response"}]},"kind":"method","name":"post","id":"post4()","comment":"Sends an HTTP POST request with the given headers and body to the given URL,\nwhich can be a [Uri] or a [String].\n\n[body] sets the body of the request. It can be a [String], a [List<int>] or\na [Map<String, String>]. If it's a String, it's encoded using [encoding] and\nused as the body of the request. The content-type of the request will\ndefault to \"text/plain\".\n\nIf [body] is a List, it's used as a list of bytes for the body of the\nrequest.\n\nIf [body] is a Map, it's encoded as form fields using [encoding]. The\ncontent-type of the request will be set to\n`\"application/x-www-form-urlencoded\"`; this cannot be overridden.\n\n[encoding] defaults to [UTF8].\n\nFor more fine-grained control over the request, use [Request] or\n[StreamedRequest] instead.","children":[{"kind":"param","name":"url","id":"url"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"headers","id":"headers"},{"isOptional":true,"isNamed":true,"kind":"param","name":"body","id":"body"},{"ref":{"name":"Encoding","refId":"dart.convert/Encoding"},"isOptional":true,"isNamed":true,"kind":"param","name":"encoding","id":"encoding","line":"131"}],"line":"130"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Response","refId":"response/Response"}]},"kind":"method","name":"get","id":"get2()","comment":"Sends an HTTP GET request with the given headers to the given URL, which can\nbe a [Uri] or a [String].\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request, use [Request] instead.","children":[{"kind":"param","name":"url","id":"url"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"headers","id":"headers"}],"line":"108"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Response","refId":"response/Response"}]},"kind":"method","name":"head","id":"head2()","comment":"Sends an HTTP HEAD request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request, use [Request] instead.","children":[{"kind":"param","name":"url","id":"url"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isOptional":true,"isNamed":true,"kind":"param","name":"headers","id":"headers"}],"line":"97"}],"uri":"package:http/http.dart","line":"68"}